// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OzhanDataLayer.Context;

#nullable disable

namespace OzhanDataLayer.Migrations
{
    [DbContext(typeof(OzhanContext))]
    [Migration("20220506203308_newOrder1111")]
    partial class newOrder1111
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.Role", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.RolePermission", b =>
                {
                    b.Property<byte>("RP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("RP_Id"), 1L, 1);

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("Permission_Id")
                        .HasColumnType("int");

                    b.Property<byte?>("RoleId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Role_Id")
                        .HasColumnType("tinyint");

                    b.HasKey("RP_Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActiveCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Family")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("UserDetai_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserDetai_Id")
                        .IsUnique()
                        .HasFilter("[UserDetai_Id] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActiveCode = "1234",
                            CreateDate = new DateTime(2022, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = " baabakaghaei@gmail.com",
                            Family = "Aghaei",
                            ImageName = "default",
                            IsActive = false,
                            IsDeleted = false,
                            Name = "baabak",
                            Password = "1234",
                            UserDetai_Id = 1L,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.UserDetailes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Urban")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("UserDetailes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "teh",
                            CreateDate = new DateTime(2022, 3, 11, 12, 23, 30, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.UserRoles", b =>
                {
                    b.Property<long>("User_Id")
                        .HasColumnType("bigint");

                    b.Property<byte>("RoleP_Id")
                        .HasColumnType("tinyint");

                    b.HasKey("User_Id", "RoleP_Id");

                    b.HasIndex("RoleP_Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.BaseProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AIOFanHeaders")
                        .HasColumnType("int");

                    b.Property<string>("AudioDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuraRgbHeader")
                        .HasColumnType("int");

                    b.Property<string>("Bios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlueTooth")
                        .HasColumnType("int");

                    b.Property<string>("BlueToothDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChassisFanHeader")
                        .HasColumnType("int");

                    b.Property<string>("Chipset")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ClearCmosBottom")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("CpuDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CpuFanHeaders")
                        .HasColumnType("int");

                    b.Property<int>("CpuOPTFanHeaders")
                        .HasColumnType("int");

                    b.Property<string>("CpuType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CpuZipCount")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CrossFireDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CrossFireSupport")
                        .HasColumnType("int");

                    b.Property<int>("DVIPorts")
                        .HasColumnType("int");

                    b.Property<int>("DimmRam")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("DisplayDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayPorts")
                        .HasColumnType("int");

                    b.Property<int>("DualChanel")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("DviDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Eight12VPinPowerConnector")
                        .HasColumnType("int");

                    b.Property<int>("Format")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("Four12VPinPowerConnector")
                        .HasColumnType("int");

                    b.Property<int>("FrontUsb2Gen")
                        .HasColumnType("int");

                    b.Property<int>("FrontUsb3_1Gen")
                        .HasColumnType("int");

                    b.Property<int>("FrontUsb3_2Gen")
                        .HasColumnType("int");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<int>("HdimPorts")
                        .HasColumnType("int");

                    b.Property<string>("HdmiDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("IsAvailable")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M2Prot")
                        .HasColumnType("int");

                    b.Property<int>("M2Protnum")
                        .HasColumnType("int");

                    b.Property<string>("M2_2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M2_3Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M2_4Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OffSale")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<int>("PCIe3_1")
                        .HasColumnType("int");

                    b.Property<int>("PCIe3_16")
                        .HasColumnType("int");

                    b.Property<int>("PCIe3_16_0num")
                        .HasColumnType("int");

                    b.Property<int>("PCIe3_1_0num")
                        .HasColumnType("int");

                    b.Property<int>("PCIe3_4")
                        .HasColumnType("int");

                    b.Property<int>("PCIe3_4_0num")
                        .HasColumnType("int");

                    b.Property<int>("PCIe5_0_16")
                        .HasColumnType("int");

                    b.Property<int>("PCIe5_0num")
                        .HasColumnType("int");

                    b.Property<int>("PortLan")
                        .HasColumnType("int");

                    b.Property<string>("PortLanDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<int>("RGB")
                        .HasColumnType("int");

                    b.Property<string>("RaidDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaidSupport")
                        .HasColumnType("int");

                    b.Property<string>("RamCapacities")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RamDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RamGeneration")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("RearUsb3_1Gen")
                        .HasColumnType("int");

                    b.Property<int>("RearUsb3_2Gen")
                        .HasColumnType("int");

                    b.Property<int>("RearUsb3_2Gen2_2")
                        .HasColumnType("int");

                    b.Property<string>("RgbDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RgbPorts")
                        .HasColumnType("int");

                    b.Property<int>("Sata")
                        .HasColumnType("int");

                    b.Property<int>("Sata6Gb")
                        .HasColumnType("int");

                    b.Property<int>("Sata6Gbnum")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SliSupport")
                        .HasColumnType("int");

                    b.Property<int?>("SubGroup")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TwentyFourPinPowerConnector")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WifiDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wireless")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Group");

                    b.HasIndex("SubGroup");

                    b.ToTable("baseProducts");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.CourseGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("CourseGroups");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.Garanty", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"), 1L, 1);

                    b.Property<long>("BaseProduct_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Garanties");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.ProdcutGaranty", b =>
                {
                    b.Property<int>("PGA_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PGA_Id"), 1L, 1);

                    b.Property<long>("BaseProduct_Id")
                        .HasColumnType("bigint");

                    b.Property<byte>("Garanty_Id")
                        .HasColumnType("tinyint");

                    b.HasKey("PGA_Id");

                    b.HasIndex("BaseProduct_Id");

                    b.HasIndex("Garanty_Id");

                    b.ToTable("ProdcutGaranties");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Orders.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinaly")
                        .HasColumnType("bit");

                    b.Property<double>("OrderSum")
                        .HasColumnType("float");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Orders.OrderDetailes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BaseProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetailes");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.Permission", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Accounts.User.Permission", null)
                        .WithMany("Permissions")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.RolePermission", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Accounts.User.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId");

                    b.HasOne("OzhanDomainLayer.Entities.Accounts.User.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.User", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Accounts.User.UserDetailes", "UserDetails")
                        .WithOne("User")
                        .HasForeignKey("OzhanDomainLayer.Entities.Accounts.User.User", "UserDetai_Id");

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.UserRoles", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Accounts.User.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleP_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OzhanDomainLayer.Entities.Accounts.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.BaseProduct", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Products.Crouses.CourseGroup", "CourseGroup")
                        .WithMany("Group")
                        .HasForeignKey("Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OzhanDomainLayer.Entities.Products.Crouses.CourseGroup", "subCourseGroup")
                        .WithMany("SubGroup")
                        .HasForeignKey("SubGroup");

                    b.Navigation("CourseGroup");

                    b.Navigation("subCourseGroup");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.CourseGroup", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Products.Crouses.CourseGroup", null)
                        .WithMany("CrouseGroups")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.ProdcutGaranty", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Products.Crouses.BaseProduct", "Product")
                        .WithMany("ProdcutGaranties")
                        .HasForeignKey("BaseProduct_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OzhanDomainLayer.Entities.Products.Crouses.Garanty", "Garanty")
                        .WithMany("ProdcutGaranties")
                        .HasForeignKey("Garanty_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garanty");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Orders.Order", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Accounts.User.User", "User")
                        .WithMany("orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Orders.OrderDetailes", b =>
                {
                    b.HasOne("OzhanDomainLayer.Entities.Products.Crouses.BaseProduct", "Product")
                        .WithMany("OrderDetailes")
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OzhanDomainLayer.Entities.Products.Orders.Order", "Order")
                        .WithMany("OrderDetailes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.Permission", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.User", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Accounts.User.UserDetailes", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.BaseProduct", b =>
                {
                    b.Navigation("OrderDetailes");

                    b.Navigation("ProdcutGaranties");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.CourseGroup", b =>
                {
                    b.Navigation("CrouseGroups");

                    b.Navigation("Group");

                    b.Navigation("SubGroup");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Crouses.Garanty", b =>
                {
                    b.Navigation("ProdcutGaranties");
                });

            modelBuilder.Entity("OzhanDomainLayer.Entities.Products.Orders.Order", b =>
                {
                    b.Navigation("OrderDetailes");
                });
#pragma warning restore 612, 618
        }
    }
}
